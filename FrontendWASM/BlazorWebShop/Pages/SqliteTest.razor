
@page "/sqlitetest"
@inject DataInitializer dataInitializer;
@inject HttpClient Http;
<h3>SqliteTest</h3>


@if (products.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Code</th>
                <th>Product Name</th>
                <th>Unit</th>
                <th>Selling Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Code</td>
                    <td>@product.Description</td>
                    <td>@product.Unit</td>
                    <td align="right">@product.UnitPrice.ToString("C2")</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Product> products = new List<Product>();


    protected override async Task OnInitializedAsync()
    {
        
        using var dbContext =await dataInitializer.GetPreparedDbContextAsync();
        var count = dbContext.Products!.Count();
        if (count == 0)
        {
            var products = await Http.GetFromJsonAsync<List<Product>>($"/api/Product/getall?storeid=1");
            await dbContext.Products!.AddRangeAsync(products);
            await dbContext.SaveChangesAsync();
        }
        products = await dbContext.Products!.ToListAsync();
    } 


}
